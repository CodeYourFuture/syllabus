"use strict";(self.webpackChunkcodeyourfuture_syllabus=self.webpackChunkcodeyourfuture_syllabus||[]).push([[147],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(r),m=n,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||l;return r?o.createElement(f,a(a({ref:t},p),{},{components:r})):o.createElement(f,a({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,a=new Array(l);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,a[1]=i;for(var s=2;s<l;s++)a[s]=r[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},27767:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},assets:function(){return p},toc:function(){return u},default:function(){return m}});var o=r(87462),n=r(63366),l=(r(67294),r(3905)),a=["components"],i={id:"level-300",title:"Level 300",sidebar_label:"Level 300"},c=void 0,s={unversionedId:"js-core-3/tv-show-dom-project/level-300",id:"js-core-3/tv-show-dom-project/level-300",title:"Level 300",description:"Add an Episode Selector",source:"@site/docs/js-core-3/tv-show-dom-project/level-300.md",sourceDirName:"js-core-3/tv-show-dom-project",slug:"/js-core-3/tv-show-dom-project/level-300",permalink:"/js-core-3/tv-show-dom-project/level-300",editUrl:"https://github.com/CodeYourFuture/Syllabus-V2/edit/master/docs/js-core-3/tv-show-dom-project/level-300.md",tags:[],version:"current",frontMatter:{id:"level-300",title:"Level 300",sidebar_label:"Level 300"},sidebar:"JavaScriptCore3",previous:{title:"Level 200",permalink:"/js-core-3/tv-show-dom-project/level-200"},next:{title:"Level 350",permalink:"/js-core-3/tv-show-dom-project/level-350"}},p={},u=[{value:"Add an Episode Selector",id:"add-an-episode-selector",level:2},{value:"Example screenshot of Episode Selector",id:"example-screenshot-of-episode-selector",level:3}],d={toc:u};function m(e){var t=e.components,i=(0,n.Z)(e,a);return(0,l.kt)("wrapper",(0,o.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"add-an-episode-selector"},"Add an Episode Selector"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Complete all requirements from level 200"),(0,l.kt)("li",{parentName:"ol"},"Add a ",(0,l.kt)("inlineCode",{parentName:"li"},"select")," input which allows you to jump quickly to an episode:",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},'The select input should list all episodes in the format: "S01E01 - Winter is Coming"'),(0,l.kt)("li",{parentName:"ol"},"When the user makes a selection, they should be taken directly to that episode in the list"),(0,l.kt)("li",{parentName:"ol"},"Bonus: if you prefer, when the select is used, ONLY show the selected episode. If you do this, be sure to provide a way for the user to see all episodes again.")))),(0,l.kt)("h3",{id:"example-screenshot-of-episode-selector"},"Example screenshot of Episode Selector"),(0,l.kt)("p",null,"Note: Provided your project meets the above requirements, it can ",(0,l.kt)("strong",{parentName:"p"},"look")," however you want."),(0,l.kt)("p",null,"Here is one example layout."),(0,l.kt)("img",{src:r(74894).Z}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/js-core-3/tv-show-dom-project/level-200"},"<< level 200")," - ",(0,l.kt)("a",{parentName:"p",href:"/js-core-3/tv-show-dom-project/"},"top")," - ",(0,l.kt)("a",{parentName:"p",href:"/js-core-3/tv-show-dom-project/level-350"},"level 350 >>")))}m.isMDXComponent=!0},74894:function(e,t,r){t.Z=r.p+"c975d6319bf4cf78547f6ffa01eee894.jpg"}}]);